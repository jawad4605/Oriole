{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\OneDrive\\\\Desktop\\\\Oriole\\\\frontend\\\\src\\\\components\\\\PlayerControls.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerControls = ({\n  words,\n  onHighlight,\n  highlightedIndex\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const utteranceRef = useRef(null);\n  const synthRef = useRef(null);\n  const isMountedRef = useRef(false);\n\n  // Create boundary handler with proper word offset calculation\n  const createBoundaryHandler = useCallback((wordOffset = 0) => {\n    return event => {\n      if (event.name === 'word' && isMountedRef.current) {\n        const charIndex = event.charIndex;\n        let cumulativeLength = 0;\n\n        // Handle spaces between words\n        for (let i = 0; i < words.length; i++) {\n          // Add space before each word except the first\n          const wordWithSpace = (i === 0 ? '' : ' ') + words[i].text;\n          cumulativeLength += wordWithSpace.length;\n          if (cumulativeLength > charIndex) {\n            const actualIndex = wordOffset + i;\n            setCurrentIndex(actualIndex);\n            if (onHighlight) onHighlight(words[i], actualIndex);\n            break;\n          }\n        }\n      }\n    };\n  }, [words, onHighlight]);\n\n  // Initialize speech synthesis\n  useEffect(() => {\n    isMountedRef.current = true;\n    if (!window.speechSynthesis) {\n      console.warn(\"Web Speech API not supported\");\n      return;\n    }\n    synthRef.current = window.speechSynthesis;\n    return () => {\n      isMountedRef.current = false;\n      if (synthRef.current) {\n        synthRef.current.cancel();\n      }\n    };\n  }, []);\n\n  // Update utterance when words change\n  useEffect(() => {\n    if (!synthRef.current || words.length === 0) return;\n\n    // Cancel any ongoing speech\n    synthRef.current.cancel();\n    setIsPlaying(false);\n\n    // Reset to first word\n    setCurrentIndex(0);\n    if (onHighlight) onHighlight(words[0], 0);\n\n    // Create new utterance\n    const utterance = new SpeechSynthesisUtterance(words.map(w => w.text).join(' '));\n    utterance.lang = 'en-US';\n    utterance.rate = 1;\n    utterance.onboundary = createBoundaryHandler(0);\n    utteranceRef.current = utterance;\n  }, [words, onHighlight, createBoundaryHandler]);\n  const togglePlayback = () => {\n    const synth = synthRef.current;\n    if (!synth) return;\n    if (isPlaying) {\n      synth.pause();\n      setIsPlaying(false);\n    } else {\n      if (synth.paused) {\n        synth.resume();\n      } else {\n        // Ensure we have a valid utterance\n        if (!utteranceRef.current) {\n          const utterance = new SpeechSynthesisUtterance(words.map(w => w.text).join(' '));\n          utterance.lang = 'en-US';\n          utterance.rate = 1;\n          utterance.onboundary = createBoundaryHandler(0);\n          utteranceRef.current = utterance;\n        }\n        synth.speak(utteranceRef.current);\n      }\n      setIsPlaying(true);\n    }\n  };\n  const handleWordClick = (word, index) => {\n    const synth = synthRef.current;\n    if (!synth) return;\n    setCurrentIndex(index);\n    if (onHighlight) onHighlight(word, index);\n    synth.cancel();\n\n    // Create partial utterance from clicked word\n    const partialWords = words.slice(index);\n    const partialText = partialWords.map(w => w.text).join(' ');\n    const partialUtterance = new SpeechSynthesisUtterance(partialText);\n    partialUtterance.lang = 'en-US';\n    partialUtterance.rate = 1;\n    partialUtterance.onboundary = createBoundaryHandler(index);\n    synth.speak(partialUtterance);\n    utteranceRef.current = partialUtterance;\n    setIsPlaying(true);\n  };\n\n  // Handle component unmount\n  useEffect(() => {\n    return () => {\n      if (synthRef.current) {\n        synthRef.current.cancel();\n      }\n      isMountedRef.current = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playback-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-btn\",\n        onClick: togglePlayback,\n        disabled: words.length === 0,\n        children: isPlaying ? '⏸ Pause' : '▶ Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), words.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: words.map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `word ${index === currentIndex ? 'active' : ''} ${index === highlightedIndex ? 'highlighted' : ''}`,\n          onClick: () => handleWordClick(word, index),\n          children: word.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .player-controls {\n          width: 100%;\n          max-width: 800px;\n          margin: 20px auto;\n          padding: 20px;\n          background: #f8f9fa;\n          border-radius: 12px;\n          box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n        }\n        \n        .playback-controls {\n          display: flex;\n          justify-content: center;\n          margin-bottom: 20px;\n        }\n        \n        .play-btn {\n          padding: 10px 25px;\n          font-size: 16px;\n          font-weight: 600;\n          background: #4CAF50;\n          color: white;\n          border: none;\n          border-radius: 30px;\n          cursor: pointer;\n          transition: all 0.3s ease;\n          display: flex;\n          align-items: center;\n          gap: 8px;\n        }\n        \n        .play-btn:hover {\n          background: #43A047;\n          transform: translateY(-2px);\n        }\n        \n        .play-btn:disabled {\n          background: #a5d6a7;\n          cursor: not-allowed;\n          transform: none;\n        }\n        \n        .progress-container {\n          width: 100%;\n          overflow-x: auto;\n          padding: 10px 0;\n        }\n        \n        .progress {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 8px;\n          padding: 15px;\n          background: white;\n          border-radius: 8px;\n          box-shadow: inset 0 2px 4px rgba(0,0,0,0.05);\n        }\n        \n        .word {\n          padding: 6px 10px;\n          border-radius: 6px;\n          cursor: pointer;\n          transition: all 0.2s ease;\n          background: #e9ecef;\n          color: #495057;\n        }\n        \n        .word:hover {\n          background: #dee2e6;\n          transform: translateY(-2px);\n        }\n        \n        .word.active {\n          background: #4CAF50;\n          color: white;\n          font-weight: 600;\n          box-shadow: 0 2px 6px rgba(76, 175, 80, 0.3);\n        }\n        \n        .word.highlighted {\n          background: #FFD54F;\n          color: #333;\n          font-weight: 600;\n        }\n        \n        .word.active.highlighted {\n          background: linear-gradient(135deg, #4CAF50 0%, #FFD54F 100%);\n          color: #333;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerControls, \"zsh+CAExbhmseReiM3+HqLoEPBY=\");\n_c = PlayerControls;\nexport default PlayerControls;\nvar _c;\n$RefreshReg$(_c, \"PlayerControls\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","PlayerControls","words","onHighlight","highlightedIndex","_s","isPlaying","setIsPlaying","currentIndex","setCurrentIndex","utteranceRef","synthRef","isMountedRef","createBoundaryHandler","wordOffset","event","name","current","charIndex","cumulativeLength","i","length","wordWithSpace","text","actualIndex","window","speechSynthesis","console","warn","cancel","utterance","SpeechSynthesisUtterance","map","w","join","lang","rate","onboundary","togglePlayback","synth","pause","paused","resume","speak","handleWordClick","word","index","partialWords","slice","partialText","partialUtterance","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","jsx","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/OneDrive/Desktop/Oriole/frontend/src/components/PlayerControls.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\n\r\nconst PlayerControls = ({ words, onHighlight, highlightedIndex }) => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const utteranceRef = useRef(null);\r\n  const synthRef = useRef(null);\r\n  const isMountedRef = useRef(false);\r\n\r\n  // Create boundary handler with proper word offset calculation\r\n  const createBoundaryHandler = useCallback((wordOffset = 0) => {\r\n    return (event) => {\r\n      if (event.name === 'word' && isMountedRef.current) {\r\n        const charIndex = event.charIndex;\r\n        let cumulativeLength = 0;\r\n        \r\n        // Handle spaces between words\r\n        for (let i = 0; i < words.length; i++) {\r\n          // Add space before each word except the first\r\n          const wordWithSpace = (i === 0 ? '' : ' ') + words[i].text;\r\n          cumulativeLength += wordWithSpace.length;\r\n          \r\n          if (cumulativeLength > charIndex) {\r\n            const actualIndex = wordOffset + i;\r\n            setCurrentIndex(actualIndex);\r\n            if (onHighlight) onHighlight(words[i], actualIndex);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }, [words, onHighlight]);\r\n\r\n  // Initialize speech synthesis\r\n  useEffect(() => {\r\n    isMountedRef.current = true;\r\n    \r\n    if (!window.speechSynthesis) {\r\n      console.warn(\"Web Speech API not supported\");\r\n      return;\r\n    }\r\n\r\n    synthRef.current = window.speechSynthesis;\r\n    \r\n    return () => {\r\n      isMountedRef.current = false;\r\n      if (synthRef.current) {\r\n        synthRef.current.cancel();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Update utterance when words change\r\n  useEffect(() => {\r\n    if (!synthRef.current || words.length === 0) return;\r\n    \r\n    // Cancel any ongoing speech\r\n    synthRef.current.cancel();\r\n    setIsPlaying(false);\r\n    \r\n    // Reset to first word\r\n    setCurrentIndex(0);\r\n    if (onHighlight) onHighlight(words[0], 0);\r\n    \r\n    // Create new utterance\r\n    const utterance = new SpeechSynthesisUtterance(words.map(w => w.text).join(' '));\r\n    utterance.lang = 'en-US';\r\n    utterance.rate = 1;\r\n    utterance.onboundary = createBoundaryHandler(0);\r\n    utteranceRef.current = utterance;\r\n    \r\n  }, [words, onHighlight, createBoundaryHandler]);\r\n\r\n  const togglePlayback = () => {\r\n    const synth = synthRef.current;\r\n    if (!synth) return;\r\n    \r\n    if (isPlaying) {\r\n      synth.pause();\r\n      setIsPlaying(false);\r\n    } else {\r\n      if (synth.paused) {\r\n        synth.resume();\r\n      } else {\r\n        // Ensure we have a valid utterance\r\n        if (!utteranceRef.current) {\r\n          const utterance = new SpeechSynthesisUtterance(words.map(w => w.text).join(' '));\r\n          utterance.lang = 'en-US';\r\n          utterance.rate = 1;\r\n          utterance.onboundary = createBoundaryHandler(0);\r\n          utteranceRef.current = utterance;\r\n        }\r\n        synth.speak(utteranceRef.current);\r\n      }\r\n      setIsPlaying(true);\r\n    }\r\n  };\r\n\r\n  const handleWordClick = (word, index) => {\r\n    const synth = synthRef.current;\r\n    if (!synth) return;\r\n    \r\n    setCurrentIndex(index);\r\n    if (onHighlight) onHighlight(word, index);\r\n    \r\n    synth.cancel();\r\n    \r\n    // Create partial utterance from clicked word\r\n    const partialWords = words.slice(index);\r\n    const partialText = partialWords.map(w => w.text).join(' ');\r\n    const partialUtterance = new SpeechSynthesisUtterance(partialText);\r\n    partialUtterance.lang = 'en-US';\r\n    partialUtterance.rate = 1;\r\n    partialUtterance.onboundary = createBoundaryHandler(index);\r\n    \r\n    synth.speak(partialUtterance);\r\n    utteranceRef.current = partialUtterance;\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  // Handle component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (synthRef.current) {\r\n        synthRef.current.cancel();\r\n      }\r\n      isMountedRef.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"player-controls\">\r\n      <div className=\"playback-controls\">\r\n        <button \r\n          className=\"play-btn\"\r\n          onClick={togglePlayback}\r\n          disabled={words.length === 0}\r\n        >\r\n          {isPlaying ? '⏸ Pause' : '▶ Play'}\r\n        </button>\r\n      </div>\r\n\r\n      {words.length > 0 && (\r\n        <div className=\"progress-container\">\r\n          <div className=\"progress\">\r\n            {words.map((word, index) => (\r\n              <span \r\n                key={index}\r\n                className={`word ${index === currentIndex ? 'active' : ''} ${index === highlightedIndex ? 'highlighted' : ''}`}\r\n                onClick={() => handleWordClick(word, index)}\r\n              >\r\n                {word.text}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <style jsx>{`\r\n        .player-controls {\r\n          width: 100%;\r\n          max-width: 800px;\r\n          margin: 20px auto;\r\n          padding: 20px;\r\n          background: #f8f9fa;\r\n          border-radius: 12px;\r\n          box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n        }\r\n        \r\n        .playback-controls {\r\n          display: flex;\r\n          justify-content: center;\r\n          margin-bottom: 20px;\r\n        }\r\n        \r\n        .play-btn {\r\n          padding: 10px 25px;\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n          background: #4CAF50;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 30px;\r\n          cursor: pointer;\r\n          transition: all 0.3s ease;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n        }\r\n        \r\n        .play-btn:hover {\r\n          background: #43A047;\r\n          transform: translateY(-2px);\r\n        }\r\n        \r\n        .play-btn:disabled {\r\n          background: #a5d6a7;\r\n          cursor: not-allowed;\r\n          transform: none;\r\n        }\r\n        \r\n        .progress-container {\r\n          width: 100%;\r\n          overflow-x: auto;\r\n          padding: 10px 0;\r\n        }\r\n        \r\n        .progress {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 8px;\r\n          padding: 15px;\r\n          background: white;\r\n          border-radius: 8px;\r\n          box-shadow: inset 0 2px 4px rgba(0,0,0,0.05);\r\n        }\r\n        \r\n        .word {\r\n          padding: 6px 10px;\r\n          border-radius: 6px;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n          background: #e9ecef;\r\n          color: #495057;\r\n        }\r\n        \r\n        .word:hover {\r\n          background: #dee2e6;\r\n          transform: translateY(-2px);\r\n        }\r\n        \r\n        .word.active {\r\n          background: #4CAF50;\r\n          color: white;\r\n          font-weight: 600;\r\n          box-shadow: 0 2px 6px rgba(76, 175, 80, 0.3);\r\n        }\r\n        \r\n        .word.highlighted {\r\n          background: #FFD54F;\r\n          color: #333;\r\n          font-weight: 600;\r\n        }\r\n        \r\n        .word.active.highlighted {\r\n          background: linear-gradient(135deg, #4CAF50 0%, #FFD54F 100%);\r\n          color: #333;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerControls;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}