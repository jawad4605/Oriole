{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\OneDrive\\\\Desktop\\\\Oriole\\\\frontend\\\\src\\\\components\\\\PlayerControls.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerControls = ({\n  words,\n  onHighlight,\n  highlightedIndex\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const utteranceRef = useRef(null);\n  const synthRef = useRef(null);\n\n  // Create boundary handler with proper word offset calculation\n  const createBoundaryHandler = useCallback((wordOffset = 0) => {\n    return event => {\n      if (event.name === 'word') {\n        const charIndex = event.charIndex;\n        let cumulativeLength = 0;\n        for (let i = 0; i < words.length; i++) {\n          // Add space before each word except the first\n          const wordWithSpace = (i === 0 ? '' : ' ') + words[i].text;\n          cumulativeLength += wordWithSpace.length;\n          if (cumulativeLength > charIndex) {\n            const actualIndex = wordOffset + i;\n            setCurrentIndex(actualIndex);\n            onHighlight(words[i], actualIndex);\n            break;\n          }\n        }\n      }\n    };\n  }, [words, onHighlight]);\n\n  // Initialize speech synthesis\n  useEffect(() => {\n    if (!window.speechSynthesis) {\n      console.warn(\"Web Speech API not supported\");\n      return;\n    }\n    synthRef.current = window.speechSynthesis;\n    const u = new SpeechSynthesisUtterance();\n    u.lang = 'en-US';\n    u.rate = 1;\n    utteranceRef.current = u;\n    return () => {\n      synthRef.current.cancel();\n    };\n  }, []);\n\n  // Update utterance text and boundary handler when words change\n  useEffect(() => {\n    const u = utteranceRef.current;\n    if (!u || words.length === 0) return;\n\n    // Reset playback state on word change\n    synthRef.current.cancel();\n    setIsPlaying(false);\n    setCurrentIndex(0);\n    u.text = words.map(w => w.text).join(' ');\n    u.onboundary = createBoundaryHandler(0);\n  }, [words, createBoundaryHandler]);\n  const togglePlayback = () => {\n    const synth = synthRef.current;\n    const u = utteranceRef.current;\n    if (!synth || !u) return;\n    if (isPlaying) {\n      synth.pause();\n      setIsPlaying(false);\n    } else {\n      if (synth.paused) {\n        synth.resume();\n      } else {\n        synth.speak(u);\n      }\n      setIsPlaying(true);\n    }\n  };\n  const handleWordClick = (word, index) => {\n    setCurrentIndex(index);\n    onHighlight(word, index);\n    const synth = synthRef.current;\n    if (!synth) return;\n    synth.cancel();\n\n    // Create partial utterance from clicked word\n    const partialWords = words.slice(index);\n    const partialText = partialWords.map(w => w.text).join(' ');\n    const partialUtterance = new SpeechSynthesisUtterance(partialText);\n    partialUtterance.lang = 'en-US';\n    partialUtterance.rate = 1;\n    partialUtterance.onboundary = createBoundaryHandler(index);\n    synth.speak(partialUtterance);\n    utteranceRef.current = partialUtterance;\n    setIsPlaying(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playback-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-btn\",\n        onClick: togglePlayback,\n        disabled: words.length === 0,\n        children: isPlaying ? '⏸ Pause' : '▶ Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), words.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: words.map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `word ${index === currentIndex ? 'active' : ''} ${index === highlightedIndex ? 'highlighted' : ''}`,\n          onClick: () => handleWordClick(word, index),\n          children: word.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerControls, \"eL4pc8ulHueugVojP7l+uzPIuFA=\");\n_c = PlayerControls;\nexport default PlayerControls;\nvar _c;\n$RefreshReg$(_c, \"PlayerControls\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","PlayerControls","words","onHighlight","highlightedIndex","_s","isPlaying","setIsPlaying","currentIndex","setCurrentIndex","utteranceRef","synthRef","createBoundaryHandler","wordOffset","event","name","charIndex","cumulativeLength","i","length","wordWithSpace","text","actualIndex","window","speechSynthesis","console","warn","current","u","SpeechSynthesisUtterance","lang","rate","cancel","map","w","join","onboundary","togglePlayback","synth","pause","paused","resume","speak","handleWordClick","word","index","partialWords","slice","partialText","partialUtterance","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/OneDrive/Desktop/Oriole/frontend/src/components/PlayerControls.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\n\r\nconst PlayerControls = ({ words, onHighlight, highlightedIndex }) => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const utteranceRef = useRef(null);\r\n  const synthRef = useRef(null);\r\n\r\n  // Create boundary handler with proper word offset calculation\r\n  const createBoundaryHandler = useCallback((wordOffset = 0) => {\r\n    return (event) => {\r\n      if (event.name === 'word') {\r\n        const charIndex = event.charIndex;\r\n        let cumulativeLength = 0;\r\n        \r\n        for (let i = 0; i < words.length; i++) {\r\n          // Add space before each word except the first\r\n          const wordWithSpace = (i === 0 ? '' : ' ') + words[i].text;\r\n          cumulativeLength += wordWithSpace.length;\r\n          \r\n          if (cumulativeLength > charIndex) {\r\n            const actualIndex = wordOffset + i;\r\n            setCurrentIndex(actualIndex);\r\n            onHighlight(words[i], actualIndex);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }, [words, onHighlight]);\r\n\r\n  // Initialize speech synthesis\r\n  useEffect(() => {\r\n    if (!window.speechSynthesis) {\r\n      console.warn(\"Web Speech API not supported\");\r\n      return;\r\n    }\r\n\r\n    synthRef.current = window.speechSynthesis;\r\n    const u = new SpeechSynthesisUtterance();\r\n    u.lang = 'en-US';\r\n    u.rate = 1;\r\n    utteranceRef.current = u;\r\n\r\n    return () => {\r\n      synthRef.current.cancel();\r\n    };\r\n  }, []);\r\n\r\n  // Update utterance text and boundary handler when words change\r\n  useEffect(() => {\r\n    const u = utteranceRef.current;\r\n    if (!u || words.length === 0) return;\r\n\r\n    // Reset playback state on word change\r\n    synthRef.current.cancel();\r\n    setIsPlaying(false);\r\n    setCurrentIndex(0);\r\n    \r\n    u.text = words.map(w => w.text).join(' ');\r\n    u.onboundary = createBoundaryHandler(0);\r\n  }, [words, createBoundaryHandler]);\r\n\r\n  const togglePlayback = () => {\r\n    const synth = synthRef.current;\r\n    const u = utteranceRef.current;\r\n    if (!synth || !u) return;\r\n\r\n    if (isPlaying) {\r\n      synth.pause();\r\n      setIsPlaying(false);\r\n    } else {\r\n      if (synth.paused) {\r\n        synth.resume();\r\n      } else {\r\n        synth.speak(u);\r\n      }\r\n      setIsPlaying(true);\r\n    }\r\n  };\r\n\r\n  const handleWordClick = (word, index) => {\r\n    setCurrentIndex(index);\r\n    onHighlight(word, index);\r\n    \r\n    const synth = synthRef.current;\r\n    if (!synth) return;\r\n\r\n    synth.cancel();\r\n    \r\n    // Create partial utterance from clicked word\r\n    const partialWords = words.slice(index);\r\n    const partialText = partialWords.map(w => w.text).join(' ');\r\n    const partialUtterance = new SpeechSynthesisUtterance(partialText);\r\n    partialUtterance.lang = 'en-US';\r\n    partialUtterance.rate = 1;\r\n    partialUtterance.onboundary = createBoundaryHandler(index);\r\n    \r\n    synth.speak(partialUtterance);\r\n    utteranceRef.current = partialUtterance;\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"player-controls\">\r\n      <div className=\"playback-controls\">\r\n        <button \r\n          className=\"play-btn\"\r\n          onClick={togglePlayback}\r\n          disabled={words.length === 0}\r\n        >\r\n          {isPlaying ? '⏸ Pause' : '▶ Play'}\r\n        </button>\r\n      </div>\r\n\r\n      {words.length > 0 && (\r\n        <div className=\"progress-container\">\r\n          <div className=\"progress\">\r\n            {words.map((word, index) => (\r\n              <span \r\n                key={index}\r\n                className={`word ${index === currentIndex ? 'active' : ''} ${index === highlightedIndex ? 'highlighted' : ''}`}\r\n                onClick={() => handleWordClick(word, index)}\r\n              >\r\n                {word.text}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerControls;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}